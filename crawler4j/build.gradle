import cl.franciscosolis.sonatypecentralupload.SonatypeCentralUploadTask

plugins {
    id  'java'
    id  'signing'
    id  'maven-publish'
    id  'com.github.johnrengelman.shadow'
    id  'cl.franciscosolis.sonatype-central-upload' version '1.0.3'
}

// description 'crawler4j: Open Source Web Crawler for Java'

ext.isReleaseVersion = !version.endsWith("SNAPSHOT")

configurations.all {
    it.exclude group: 'commons-logging'
    it.exclude group: 'log4j'
    it.exclude group: 'org.apache.logging.log4j'
}

// https://stackoverflow.com/questions/23796404/could-not-find-method-compile-for-arguments-gradle

dependencies {
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
    implementation group: 'org.slf4j', name: 'jcl-over-slf4j', version: '1.7.36'
    implementation group: 'org.slf4j', name: 'jul-to-slf4j', version: '1.7.36'
    implementation group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.14'
    implementation group: 'com.sleepycat', name: 'je', version: '18.3.12'
    implementation(group: 'org.apache.tika', name: 'tika-parsers', version: '1.28.5') {
        exclude(module: 'poi-ooxml')
        exclude(module: 'poi-scratchpad')
        exclude(module: 'poi-ooxml')
        exclude(module: 'poi-ooxml-schemas')
        exclude(module: 'pdfbox')
        exclude(module: 'pdfbox-tools')
        exclude(module: 'jempbox')
        exclude(module: 'jmatio')
        exclude(module: 'jackcess')
        exclude(module: 'jackcess-encrypt')
        exclude(module: 'xz')
        exclude(module: 'junrar')
        exclude(module: 'opennlp-tools')
        exclude(module: 'sis-utility')
        exclude(module: 'sis-netcdf')
        exclude(module: 'sis-metadata')
        exclude(module: 'geoapi')
        exclude(module: 'java-libpst')
        exclude(module: 'rome')
        exclude(module: 'json')
        exclude(module: 'netcdf4')
        exclude(module: 'grib')
        exclude(module: 'cdm')
        exclude(module: 'httpservices')
        exclude(module: 'vorbis-java-tika')
        exclude(module: 'vorbis-java-core')
        exclude(module: 'asm')
        exclude(module: 'isoparser')
        exclude(module: 'metadata-extractor')
        exclude(module: 'commons-csv')
        exclude(module: 'commons-exec')
        exclude(module: 'commons-compress')
        exclude(module: 'commons-codec')
        exclude(module: 'json-simple')
        exclude(module: 'gson')
        exclude(module: 'boilerpipe')
        exclude(module: 'juniversalchardet')
        exclude(module: 'jhighlight')
        exclude(module: 'bcmail-jdk15on')
        exclude(module: 'bcprov-jdk15on')
        exclude(module: 'cxf-rt-rs-client')
        exclude(module: 'jackson-core')
        exclude(module: 'json')
        exclude(module: 'sentiment-analysis-parser')
    }
    implementation group: 'io.github.pgalbraith', name: 'url-detector', version: '0.1.20'
    implementation group: 'com.google.guava', name: 'guava', version: '33.2.1-jre'
    implementation group: 'de.malkusch.whois-server-list', name: 'public-suffix-list', version: '2.2.0'
    runtimeOnly group: 'ch.qos.logback', name: 'logback-classic', version: '1.5.6'

    testImplementation group: 'junit', name: 'junit', version: '4.13.2'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '3.0.1'
    testImplementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.22'
    testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.4-M4-groovy-3.0'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    archiveClassifier = 'sources'
    from sourceSets.main.allJava
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier = 'javadoc'
    from javadoc.destinationDir
}

artifacts {
    archives sourcesJar
    archives javadocJar
}

signing {
    // https://docs.gradle.org/current/userguide/signing_plugin.html
    def signingKey = System.getenv("GPG_SIGNING_KEY")
    def signingPassword = System.getenv("GPG_SIGNING_KEY_PASSPHRASE")
    useInMemoryPgpKeys(signingKey, signingPassword)
    sign configurations.archives
}

tasks.withType(Sign) {
    onlyIf { isReleaseVersion }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom)
            from components.java

            artifact sourcesJar
            artifact javadocJar

            // Sign the pom
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
                //pomFile.delete()
            }

            // Sign the artifacts
            project.tasks.signArchives.signatureFiles.each {
                def jarFile = file(it.toString().replace(".asc",""))
                def jarAscFile = signing.sign(jarFile).signatureFiles[0]
                artifact(jarAscFile) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
}

def customizePom(pom) {
    pom.withXml {
        def root = asNode()

        root.dependencies.removeAll { dep ->
            dep.scope == 'test'
        }

        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            name 'crawler4j'
            description 'crawler4j: Open Source Web Crawler for Java'
            url 'https://github.com/yasserg/crawler4j'
            licenses {
                license {
                    name 'The Apache Software License, Version 2.0'
                    url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                }
            }
            developers {
                developer {
                    id 'yasserg'
                    name 'Yasser Ganjisaffar'
                }
            }
            scm {
                connection 'scm:git:git@github.com:yasserg/crawler4j.git'
                developerConnection 'scm:git:git@github.com:yasserg/crawler4j.git'
                url 'https://github.com/yasserg/crawler4j'
            }
        }
    }
}

// https://zenn.dev/orangain/articles/publish-to-maven-central-using-gradle
sonatypeCentralUpload {
    dependsOn("jar", "sourcesJar", "javadocJar")

    username = System.getenv("SONATYPE_USERNAME")
    password = System.getenv("SONATYPE_PASSWORD")

    archives = files(
        tasks.named("jar"),
        tasks.named("sourcesJar"),
        tasks.named("javadocJar"),
    )
    pom = file("${project.buildDir}/generated-pom.xml")

    signingKey = System.getenv("GPG_SIGNING_KEY")
    signingKeyPassphrase = System.getenv("GPG_SIGNING_KEY_PASSPHRASE")
}
